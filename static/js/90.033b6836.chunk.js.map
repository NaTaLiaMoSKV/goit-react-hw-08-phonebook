{"version":3,"file":"static/js/90.033b6836.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","redux/filter/selectors.js","components/ContactList/ContactList.js","components/Phonebook/Phonebook.js"],"sourcesContent":["export const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectContactsList = state => state.contacts.contactsList;\n\nexport const selectError = state => state.contacts.error;","import { useState } from \"react\";\nimport { addContact } from \"redux/contacts/operations\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectContactsList } from \"redux/contacts/selectors\";\n\nexport default function ContactForm() {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contacts = useSelector(selectContactsList);\n    const dispatch = useDispatch();\n\n    const onFormSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n\n        const contact = {\n            name: form.elements.name.value,\n            number: form.elements.number.value,\n        }\n        \n        const isContactInContactList = contact => {\n            return (contacts.find(cont => cont.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()) !== undefined)\n        }\n\n        if (!isContactInContactList(contact) ) {\n            dispatch(addContact(contact));\n        } else alert(`${contact.name} is already in contacts.`);\n        \n        setName('');\n        setNumber('');\n    }\n\n    const handleInputChange = e => {\n        const { name, value } = e.currentTarget;\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    }\n\n    return (\n        <form onSubmit={onFormSubmit}>\n            <label className=\"form__label\">\n                Name \n                <input type=\"text\" value={name} name=\"name\" pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                onChange={handleInputChange} required/>\n            </label>\n\n            <label className=\"form__label\">\n                Phone\n                <input type=\"tel\"  value={number} name=\"number\" pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                onChange={handleInputChange} required/>\n            </label>\n            \n            <button type=\"submit\" className=\"form__button\">Add contact</button>\n        </form>\n    )\n}\n","import { useDispatch } from \"react-redux\"\nimport { update } from \"redux/filter/slice\"\n\nexport default function Filter() {\n    const dispatch = useDispatch();\n\n    const handleInputChange = e => {\n        const filterString = e.currentTarget.value;\n        dispatch(update(filterString));\n    }\n    \n    return (\n        <div className=\"filter\">\n            <label> Find contact by name </label>\n            <input className=\"filter__input\" name=\"filter\" onChange={handleInputChange} />\n        </div>\n    )\n}","export const selectFilter = state => state.filter.query;","import { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { selectFilter } from \"redux/filter/selectors\";\nimport { selectContactsList } from \"redux/contacts/selectors\";\n// import { useEffect } from \"react\";\n\nexport default function ContactList() {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n    const contactsList = useSelector(selectContactsList);\n\n    const findContact = name => {\n        const val = filter.toString().toLocaleLowerCase();\n        return name.toLocaleLowerCase().includes(val);\n    }\n\n    return (\n        <ul className=\"contacts__list\">\n            {contactsList\n                .filter(contact => findContact(contact.name))\n                .map(contact => ( \n                    <li key={contact.id} className=\"contacts__item\">\n                        <p>{contact.name}: <span style={{ marginLeft: 10 }}>{contact.number}</span></p>\n                        <button className=\"contacts__button\" type=\"button\" onClick={() => dispatch(deleteContact(contact.id))}> Delete </button>\n                    </li>\n                ))\n            }            \n        </ul>\n        // <ul>\n        //     {contactsList.map(({ id, text }) => (\n        //         <li key={contact.id} className=\"contacts__item\">\n        //             <p>{contact.name}: <span style={{ marginLeft: 10 }}>{contact.number}</span></p>\n        //             <button className=\"contacts__button\" type=\"button\" onClick={() => dispatch(deleteContact(contact.id))}> Delete </button>\n        //         </li>\n        //     ))}\n        // </ul>\n    )\n}","import ContactForm from \"components/ContactForm/ContactForm\";\nimport Filter from \"components/Filter/Filter\";\nimport ContactList from \"components/ContactList/ContactList\";\n\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { selectContactsList, selectError, selectIsLoading } from \"redux/contacts/selectors\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectIsLoggedIn } from \"redux/auth/selections\";\n\nexport default function Phonebook() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContactsList);\n    const error = useSelector(selectError);\n    const isLoading = useSelector(selectIsLoading);\n    const isLoggedIn = useSelector(selectIsLoggedIn)\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n        <h1>Phonebook</h1>\n        <ContactForm />\n\n        <h2>Contacts</h2>\n        <Filter />\n        { !isLoading && !error && contacts.length === 0 && <h2 style={{ marginLeft: \"20px\", fontFamily: \"monospace\" }}> Your phonebook is empty </h2> }\n        { isLoading && !error && <h2 style={{ marginLeft: \"20px\", fontFamily: \"monospace\" }}>Loading phonebook...</h2> }\n        { isLoggedIn && <ContactList /> }\n    </>\n    )\n}"],"names":["selectIsLoading","state","contacts","isLoading","selectContactsList","contactsList","selectError","error","ContactForm","useState","name","setName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","currentTarget","value","onSubmit","preventDefault","form","contact","elements","undefined","find","cont","toLocaleLowerCase","isContactInContactList","addContact","alert","className","type","pattern","title","onChange","required","Filter","filterString","update","selectFilter","filter","query","ContactList","val","toString","includes","findContact","map","style","marginLeft","onClick","deleteContact","id","Phonebook","isLoggedIn","selectIsLoggedIn","useEffect","fetchContacts","length","fontFamily"],"sourceRoot":""}